pipeline {
    agent{
       label 'lms-project'
    }
  
  environment {

    DOCKERHUB_CREDENTIALS = credentials('yoursureshdockerhub')
     registry = "yoursureshdockerhub/lms-project-backend"
        registryCredential = 'yoursureshdockerhub'
        dockerImage = ''
    }
    
     stages {
   
 

         stage('building the docker image') {
            steps {
               
                sh 'cd api && docker build -t yoursureshdockerhub/lms-project-backend .'
            } 

        }
         stage('code quality check with sonarqube') {
            steps {
               
                sh 'docker container run --rm -e SONAR_HOST_URL="http://20.219.248.133:9000" -e SONAR_LOGIN="sqp_aae445aab5fec16cc31bf38512b4ea72aea8bf5a" -v ".:/usr/src" sonarsource/sonar-scanner-cli -Dsonar.projectKey=lms-project'
            }
          
        }          
        
         stage('Logging into dockerhub account') {
            steps {
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }          
        stage('pushing the docker image into dockerhub') {
            steps {
                  sh 'docker push yoursureshdockerhub/lms-project-backend'
            }
        }
        stage('Remove old docker images') {
             steps {
                 sh 'docker rmi -f yoursureshdockerhub/lms-project-backend'
            }
        }
         stage('creating database container') {
             steps {
                 sh 'docker container rm --force lmsdb'
                 sh 'docker run -d -p 5432:5432 --network lmsnetwork -e  POSTGRES_PASSWORD=password --name lmsdb postgres'
            }
        }
         stage('Running the docker container') {
            steps {
                  sh 'docker container rm --force backend'
                  sh 'docker run -d -p 8080:8080 --network lmsnetwork -e DATABASE_URL=postgresql://postgres:password@lmsdb:5432/postgres --name backend -e PORT=8080 -e MODE=local yoursureshdockerhub/lms-project-backend'
            }
        }
    }
}
